# Импотрируем объет колонка, а также типы данныех число и строка
from sqlalchemy import Column, Integer, String
# И-ем конструктор базы Base и переменную с параметрами входа на облако
from db import Base, engine


# Наследуем свойства от класса Base и создаем объект User
# заполняем своими данныеми (колонки, название табилцы, тип данных и т.п.)
# Модель (таблица) - это питоновский класс
class User(Base):
    # Имя таблицы = users
    __tablename__ = 'users'

    # id это клонка (тип данных число, является начальным ключом = правда)
    id = Column(Integer(), primary_key=True)
    # Имя = колонка (тип данных текст)
    name = Column(String())
    # Зарпалата = колонка (тип данных число)
    salary = Column(Integer())
    # Емейл = кололнка (тип данных строка (макс. коло символов = 120))
    # unique - данные должны быть уникальны / unique (уникальный) = правда
    email = Column(String(120), unique=True)

    """Если мы захотим в командной строке вызвать конкретного пользователя, то
    На выход мы будем получать адрес объекта в памяти,
    а нам нужны данные, поэтому оформялем вывод данных через
    __repr__"""
    def __repr__(self):
        return f'<User {self.name} {self.email}>'


if __name__ == "__main__":
    # Созадание таблицы на облаке,
    # Base в данном случае содержит унаследованую модель User
    # Создать все что есть в Base, связь по параметрам в engine
    Base.metadata.create_all(bind=engine)
